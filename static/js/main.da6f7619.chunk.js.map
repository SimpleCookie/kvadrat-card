{"version":3,"sources":["config.ts","hooks/useKvadratare.tsx","img/logotype.png","Card.tsx","pages/error.page.tsx","Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["links","mapKvadratare","k","id","name","acf","img","photo","employed","useKvadratare","useState","kvadratare","setKvadratare","laddar","setLaddar","error","setError","useEffect","a","fetch","res","json","cards","mappedCards","map","fetchCards","Card","urlParams","useParams","loading","user","find","it","className","src","alt","logotype","href","to","ErrorPage","target","rel","style","color","Home","JSON","stringify","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da6f7619.chunk.js","sourcesContent":["export const placeholder = \"https://via.placeholder.com/414\"\nexport const links = {\n  employees: \"https://www.kvadrat.se/aktuellt/kvadrat-sundsvall-forstarker-med-ny-affarsutvecklare/\",\n  consultants: \"https://www.kvadrat.se/anlita-kvadrat/hitta-konsult/?q=&l=sundsvall#results\",\n}\n","import { useEffect } from \"react\"\nimport { useState } from \"react\"\nimport { Kvadratare } from \"../img\"\n\nconst mapKvadratare = (k: any) => ({\n  id: k.id,\n  name: k.acf.name,\n  img: k.acf.photo,\n  employed: k.acf.employed,\n})\n\nconst cardUrl =\n  \"https://kvadrat.devgroup.se/wp-json/acf/v3/kvadratare?per_page=100\"\n\nexport const useKvadratare = (): [Kvadratare[], boolean, string | null] => {\n  const [kvadratare, setKvadratare] = useState<Kvadratare[]>([])\n  const [laddar, setLaddar] = useState(true)\n  const [error, setError] = useState<any>(null)\n\n  useEffect(() => {\n    const fetchCards = async () => {\n      try {\n        const res = await fetch(cardUrl)\n        const cards: any = await res.json()\n        const mappedCards: Kvadratare[] = cards?.map(mapKvadratare)\n        setKvadratare(mappedCards || [])\n      } catch (error) {\n        setError(error)\n      } finally {\n        setLaddar(false)\n      }\n    }\n    fetchCards()\n  }, [])\n\n  return [kvadratare, laddar, error]\n}\n","export default __webpack_public_path__ + \"static/media/logotype.8e38c9b4.png\";","import React from \"react\"\nimport { Link, Redirect, useParams } from \"react-router-dom\"\nimport { links, placeholder } from \"./config\"\nimport { useKvadratare } from \"./hooks/useKvadratare\"\nimport logotype from \"./img/logotype.png\"\n\nexport const Card = () => {\n  const urlParams = useParams<{ id: string }>()\n  const [kvadratare, loading] = useKvadratare()\n\n  const user = kvadratare.find((it) => {\n    return it.id === +urlParams.id\n  })\n\n  if (loading) return <h1>Laddar ...</h1>\n  if (!user) return <Redirect to=\"/\" />\n  return (\n    <div className=\"background\">\n      <div className=\"profile\">\n        <img src={user.img || placeholder} alt=\"Profilbild\" className=\"photo\" />\n        <div className=\"logotype\">\n          <img src={logotype} alt=\"Logotyp\" />\n        </div>\n        <div className=\"card\">\n          <h1>{user.name}</h1>\n          <a href={user.employed ? links.employees : links.consultants}>\n            Kvadrat Sundsvall\n          </a>\n        </div>\n        <div className=\"tillbaka\">\n          <Link to=\"/\">Tillbaka</Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { links } from \"../config\"\n\ninterface Props {\n  error: string\n}\n\nexport const ErrorPage = ({error}: Props) => {\n  return (\n    <div>\n      <h1>N책got 채r knas, {error}</h1>\n      <h2>Relevanta l채nkar</h2>\n      <ul>\n        <li>\n          <a href={links.consultants} target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: \"#DDD\"}}>\n            Konsulter\n          </a>\n        </li>\n        <li>\n          <a href={links.employees} target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: \"#DDD\"}}>\n            Anst채llda\n          </a>\n        </li>\n      </ul>\n    </div>\n  )\n}\n","import { Kvadratare } from \"./img\"\nimport { Link } from \"react-router-dom\"\nimport { useKvadratare } from \"./hooks/useKvadratare\"\n\nimport \"./App.scss\"\nimport { ErrorPage } from \"./pages/error.page\"\n\nexport const Home = () => {\n  const [kvadratare, loading, error] = useKvadratare()\n\n  if (loading) {\n    return <h1>Laddar ...</h1>\n  }\n\n  if (error) {\n    return <ErrorPage error={JSON.stringify(error)} />\n  }\n\n  return (\n    <nav className=\"background\">\n      <ol className=\"user-list\">\n        {kvadratare.map((it) => (\n          <li key={it.name} className=\"user-list-item\">\n            <Link to={`card/${it.id}`}>{it.name}</Link>\n          </li>\n        ))}\n      </ol>\n    </nav>\n  )\n}\n","import { Card } from \"./Card\"\nimport { Home } from \"./Home\"\nimport { Switch, HashRouter as Router, Route } from \"react-router-dom\"\n\nimport \"./App.scss\"\n\nexport const App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <Switch>\n      <Route exact path=\"/card/:id\" component={Card} />\n      <Route exact path=\"/\" component={Home} />\n    </Switch>\n  </Router>\n)\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}